name: Weekly Lighthouse Audit

on:
  schedule:
    - cron: '0 12 * * 5'  # Every Friday at 12pm UTC = 8am Eastern
  workflow_dispatch:

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Dependencies
      run: |
        npm install -g lighthouse
        npm install csv-writer fs

    - name: Run Lighthouse and Generate JSON Reports
      run: |
        mkdir lighthouse-reports
        mkdir json-summaries
        while IFS= read -r url
        do
          name=$(echo $url | sed 's|https\?://||; s|/|_|g')
          lighthouse "$url" --output json --output-path="json-summaries/${name}.json" --chrome-flags="--headless"
        done < urls.txt

    - name: Create Summary CSV from JSON
      run: |
        node <<EOF
        const fs = require('fs');
        const path = require('path');
        const createCsvWriter = require('csv-writer').createObjectCsvWriter;
    
        const dir = 'json-summaries';
        const files = fs.readdirSync(dir);
        const records = [];
    
        const rawDate = new Date();
        const today = rawDate.toLocaleDateString('en-US'); // MM/DD/YYYY
        const filename = rawDate.toISOString().slice(0, 10); // YYYY-MM-DD for file name
    
        files.forEach(file => {
          const data = JSON.parse(fs.readFileSync(path.join(dir, file)));
          const url = data.finalUrl;
          const categories = data.categories;
          const perf = Math.round(categories.performance.score * 100);
          const access = Math.round(categories.accessibility.score * 100);
          const best = Math.round(categories['best-practices'].score * 100);
          const seo = Math.round(categories.seo.score * 100);
          const total = perf + access + best + seo;
    
          records.push({
            Website: url,
            Performance: perf,
            Accessibility: access,
            BestPractices: best,
            SEO: seo,
            Total: total,
            Date: today
          });
        });
    
        // Sort by total descending and assign rank
        records.sort((a, b) => b.Total - a.Total);
        records.forEach((record, index) => {
          record.Rank = index + 1;
        });
    
        const csvWriter = createCsvWriter({
          path: `lighthouse-reports/summary_${filename}.csv`,
          header: [
            { id: 'Website', title: 'Website' },
            { id: 'Performance', title: 'Performance' },
            { id: 'Accessibility', title: 'Accessibility' },
            { id: 'BestPractices', title: 'Best Practices' },
            { id: 'SEO', title: 'SEO' },
            { id: 'Total', title: 'Total Score' },
            { id: 'Rank', title: 'Rank' },
            { id: 'Date', title: 'Date' }
          ]
        });
    
        csvWriter.writeRecords(records).then(() => console.log('CSV with rank and formatted date written.'));
        EOF
        
    - name: Upload summary CSV only
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-summary
        path: lighthouse-reports/summary_*.csv
    
    - name: Commit summary CSV to repo
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@users.noreply.github.com"
        git fetch origin
        git checkout main
        cp lighthouse-reports/summary_*.csv .
        git add summary_*.csv
        git commit -m "Add Lighthouse summary for $(date +'%Y-%m-%d')" || echo "No changes to commit"
        git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
        git push origin main
